import os

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import User as TgUser

from bot.chains.base.kb import start_kb
from bot.chains.register_bug.kb import cancel_kb, get_admin_decision_kb
from bot.chains.register_bug.state import RegisterBug
from bot.config import ADMIN_CHAT_ID
from bot.core import dp, bot
from db.config import UPLOAD_DIR
from db.models.bug import Bug, BugStatus


@dp.callback_query_handler(lambda x: x.data == 'bug_register_cancel', state='*')
async def cancel(c: types.CallbackQuery, state: FSMContext):
    await state.finish()
    await bot.send_message(c.from_user.id, '–°–∫–∞—Å–æ–≤–∞–Ω–æ', reply_markup=start_kb)
    await c.answer('–°–∫–∞—Å–æ–≤–∞–Ω–æ')


@dp.message_handler(regexp='–î–æ–¥–∞—Ç–∏ –±–∞–≥ üêû', state='*')
async def add_bug_start(msg: types.Message):
    await RegisterBug.wait_photo.set()
    await msg.answer('–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ –±–∞–≥—É üì∏', reply_markup=cancel_kb)


@dp.message_handler(state=RegisterBug.wait_photo, content_types=['photo', 'video', 'document'])
async def add_bug_photo(msg: types.Message, state: FSMContext):
    if len(msg.photo) == 0:
        await msg.answer('–£–ø—Å—Å.. –ü–æ–º–∏–ª–∫–∞ üòî\n'
                         '–°–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ñ–æ—Ç–æ, –∞–±–æ —Å–∫–∞—Å—É–π—Ç–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±–∞–≥—É', reply_markup=cancel_kb)

    await state.set_data({'photo_id': msg.photo[-1].file_id})
    await RegisterBug.wait_description.set()
    await msg.answer('–û–ø–∏—à—ñ—Ç—å –ø—Ä–æ–±–ª–µ–º—É –≤ 1 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ', reply_markup=cancel_kb)


@dp.message_handler(state=RegisterBug.wait_description)
async def add_bug_description(msg: types.Message, state: FSMContext):
    await state.update_data({'description': msg.text})
    await RegisterBug.wait_location.set()
    await msg.answer('–ù–∞–¥—ñ—à–ª—ñ—Ç—å –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è (–∞—É–¥–∏—Ç–æ—Ä—ñ—é, –∫–æ—Ä–ø—É—Å) —è–∫–æ–º–æ–≥–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ—à–µ üè¢', reply_markup=cancel_kb)


@dp.message_handler(state=RegisterBug.wait_location)
async def add_bug_location(msg: types.Message, state: FSMContext):
    data = await state.get_data()
    default_status = await BugStatus.select('id').where(BugStatus.status == 'pending').gino.scalar()

    bug = await Bug.create(photo_path=data.get('photo_id'),
                           description=data.get('description'),
                           location=msg.text,
                           status=default_status,
                           user=TgUser.get_current())
    await bot.download_file(data.get('photo_id'), os.path.join(UPLOAD_DIR, f'{bug.id}.jpg'))
    await bug.update(photo_path=f'uploads/bugs/{bug.id}.jpg').apply()

    await bot.send_photo(ADMIN_CHAT_ID, data.get('photo_id'), caption=f'–ë–∞–≥ # {bug.id}\n'
                                                                      f'–ú—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è <i>{msg.text}</i>\n'
                                                                      f'–û–ø–∏—Å <i>{data.get("description")}</i>',
                         reply_markup=get_admin_decision_kb(bug.id))

    await state.finish()
    await msg.answer(f'–ë–∞–≥ ‚Ññ {bug.id} –±—É–ª–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω–∞–º. '
                     f'–ù–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç—å, —Ç–∞ —Å–ø–æ–≤—ñ—Å—Ç—è—Ç—å –≤–∞—Å\n\n'
                     f'–î—è–∫—É—î–º–æ –∑–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è üòä')


@dp.callback_query_handler(lambda x: x.data.startswith('admin_decision_'))
async def admin_decision_(cq: types.CallbackQuery):
    await cq.message.delete_reply_markup()

    c_data = cq.data.replace('admin_decision_', '')
    decision, bug_id = c_data.split('_')

    bug = await Bug.get(int(bug_id))
    status = await BugStatus.select('id').where(BugStatus.status == decision).gino.scalar()

    if decision == 'registered':
        await bot.send_message(bug.user, f'–ë–∞–≥ ‚Ññ {bug.id} '
                                         f'–ø—Ä–∏–π–Ω—è—Ç–æ –≤ —Ä–æ–±–æ—Ç—É, –±—É–¥–µ–º–æ —Å—Ç–∞—Ä–∞—Ç–∏—Å—è –ø–æ—Ñ—ñ–∫—Å–∏—Ç–∏ –π–æ–≥–æ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º üòâ')
    else:
        await bot.send_message(bug.user, f'–ú–∞–±—É—Ç—å —Ç–∏ –ø–æ–º–∏–ª–∏–≤—Å—è –ø—Ä–∏ –æ–ø–∏—Å—ñ –±–∞–≥—É ‚Ññ {bug.id} üòî\n\n'
                                         '–ù–∞—Ä–∞–∑—ñ –≤—ñ–¥—Ö–∏–ª—è—î–º–æ —Ç–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, '
                                         '–∞–ª–µ —Ç–∏ –º–æ–∂–µ—à –¥–æ–¥–∞—Ç–∏ —Ç—Ä—ñ—à–∫–∏ –∫—Ä–∞—â–∏–π –æ–ø–∏—Å —Ç–∞ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑ üòâ')

    await bug.update(status=status).apply()

    await cq.answer('–ì–æ—Ç–æ–≤–æ')
